name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build on ${{ matrix.os }} with Java ${{ matrix.java }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: [21, 22]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Build with Maven
      run: mvn clean compile -DskipTests
      
    - name: Run unit tests
      run: mvn test
      
    - name: Generate coverage report
      run: mvn jacoco:report
      
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.java == '21'
      uses: codecov/codecov-action@v4
      with:
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella
        
    - name: Package artifacts
      run: mvn package -DskipTests
      
    - name: Upload build artifacts
      if: matrix.os == 'ubuntu-latest' && matrix.java == '21'
      uses: actions/upload-artifact@v4
      with:
        name: amcp-jars
        path: |
          core/target/*.jar
          connectors/target/*.jar
          examples/target/*.jar
          cli/target/*.jar
        retention-days: 7

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    
    services:
      kafka:
        image: confluentinc/cp-kafka:latest
        env:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        ports:
          - 9092:9092
          
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Run integration tests
      run: mvn verify -P integration
      env:
        KAFKA_BOOTSTRAP_SERVERS: localhost:9092

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Run SpotBugs
      run: mvn spotbugs:check -P quality
      
    - name: Run Checkstyle
      run: mvn checkstyle:check -P quality
      
    - name: Run PMD
      run: mvn pmd:check -P quality
      
    - name: Upload quality reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: quality-reports
        path: |
          target/spotbugs.xml
          target/checkstyle-result.xml
          target/pmd.xml
        retention-days: 30
